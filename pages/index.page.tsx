import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { useForm } from '@mantine/form'
import {
  Anchor,
  Box,
  Button,
  Container,
  Flex,
  Stack,
  Text,
  TextInput,
  Textarea,
} from '@mantine/core'
import { useOpenAiQuery } from '@/react-query/useOpenAiQuery'
import { ChatCompletionResponseMessage } from 'openai'
import { KeyboardEventHandler, useRef, useState } from 'react'

const wrapInMessage = (
  content: string,
  role: ChatCompletionResponseMessage['role'] = 'user'
) => ({
  content,
  role,
})

export default function Home() {
  const { mutateAsync: sendMessages } = useOpenAiQuery()

  const [messages, setMessages] = useState<ChatCompletionResponseMessage[]>([])

  const form = useForm({
    initialValues: {
      prompt:
        'Hey there, this is just a test prompt. But anyways nice chatting with you.',
    },
  })

  const handleButtonClick = async () => {
    const message = wrapInMessage(form.values.prompt)
    form.setFieldValue('prompt', '')

    messages.push(message)
    const newMessages = await sendMessages(messages)
    setMessages(newMessages)
  }

  const handleClear = () => {
    setMessages([])
  }

  const mantineButtonRef = useRef<HTMLButtonElement>(null)

  const handleKeyPress: KeyboardEventHandler<HTMLTextAreaElement> = (event) => {
    if (event.key === 'Enter' && !event.shiftKey) {
      mantineButtonRef.current?.click()
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Container fluid sx={{ width: '100%' }}>
          <Box component="form" onSubmit={form.onSubmit(handleButtonClick)}>
            <Stack>
              <Stack spacing={4}>
                {messages.map((message, index) => {
                  return <Message message={message} key={index} />
                })}
              </Stack>

              <Textarea
                //
                label="Prompt"
                {...form.getInputProps('prompt')}
                placeholder="This is a test prompt"
                onKeyDown={handleKeyPress}
              />

              <Button
                //
                ref={mantineButtonRef}
                type="submit"
              >
                Submit
              </Button>

              <Text
                onClick={handleClear}
                component="a"
                align="center"
                size="sm"
                fw="bold"
                sx={{
                  cursor: 'pointer',
                  '&:hover': {
                    textDecoration: 'underline',
                  },
                }}
              >
                Clear conversation
              </Text>
            </Stack>
          </Box>
        </Container>
      </main>
    </>
  )
}

const Message = ({ message }: { message: ChatCompletionResponseMessage }) => {
  return (
    <Box
      sx={(theme) => ({
        backgroundColor:
          message.role === 'user' ? theme.colors.gray5 : theme.colors.blue[1],
        padding: '.7rem',
        border: `1px solid ${theme.colors.gray25[0]}`,
        borderRadius: theme.radius.md,
      })}
    >
      <Text size="sm">{message.content}</Text>
    </Box>
  )
}
